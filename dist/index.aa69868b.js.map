{"mappings":"AAAA,MAAM,iBAAiB,SAAS,cAAc,CAAC;AAE/C,MAAM,YAAY,SAAS,cAAc,CAAC;AAE1C,MAAM,aAAa,SAAS,cAAc,CAAC;AAE3C,MAAM,cAAc,SAAS,cAAc,CAAC;AAE5C,MAAM,aAAa,SAAS,cAAc,CAAC;AAE3C,MAAM,SAAS,SAAS,cAAc,CAAC;AAEvC,IAAI,YAAY,EAAE;AAElB,SAAS,qBAAqB;IAC5B,OAAO,MAAM,GAAG,KAAK;IACrB,eAAe,MAAM,GAAG,IAAI;AAC9B;AACA,gBAAgB;AAChB,SAAS,uBAAuB;IAC9B,IAAI,CAAC,OAAO,MAAM,EAAE;QAClB,eAAe,MAAM,GAAG,KAAK;QAC7B,OAAO,MAAM,GAAG,IAAI;IACtB,CAAC;AACH;AAEA,mBAAmB;AACnB,MAAM,eAAe,IAAM;IACzB;IAEA,6CAA6C;IAC7C,MAAM,QAAQ,SAAS,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,UAAU,MAAM,EAAE;IACrE,6DAA6D;IAC7D,IAAI,CAAC,MAAM,MAAM,EACf,WAAW,WAAW,GAAG;SAEzB,WAAW,WAAW,GAAG,MAAM,MAAM;IAGvC,4CAA4C;IAC5C,IAAI,MAAM,IAAI,CAAC,MAAM,GAAG,IACtB,UAAU,SAAS,CAAC,GAAG,CAAC;SAExB,UAAU,SAAS,CAAC,MAAM,CAAC,eAAe,kDAAkD;IAE9F,UAAU,WAAW,GAAG,MAAM,IAAI;IAClC,0BAA0B;IAC1B;AACF;AAEA,uBAAuB;AAEvB,yIAAyI;AAEzI,eAAe,mBAAmB;IAChC;IACA,MAAM,SAAS;IACf,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,SAAS,uCAAuC;QAE7E,YAAY,MAAM,SAAS,IAAI;QAE/B,gBAAgB,6BAA6B;IAC/C,EAAE,OAAO,OAAO;QACd,oBAAoB;QACpB,QAAQ,GAAG,CAAC,kBAAkB;IAChC;AACF;AACA,kBAAkB;AAClB,SAAS,gBAAgB;IACvB,MAAM,aAAa,CAAC,sCAAsC,EAAE,UAAU,WAAW,CAAC,GAAG,EAAE,WAAW,WAAW,CAAC,CAAC;IAC/G,OAAO,IAAI,CAAC,YAAY,WAAW,uBAAuB;AAC5D;AACA,mBAAmB;AACnB,YAAY,gBAAgB,CAAC,SAAS;AACtC,WAAW,gBAAgB,CAAC,SAAS;AAErC,WAAW;AACX","sources":["src/js/main.js"],"sourcesContent":["const quoteContainer = document.getElementById(\"quote-container\");\n\nconst quoteText = document.getElementById(\"quote\");\n\nconst authorText = document.getElementById(\"author\");\n\nconst newQuoteBtn = document.getElementById(\"new-quoteBtn\");\n\nconst twitterBtn = document.getElementById(\"twitter-button\");\n\nconst loader = document.getElementById(\"loader\");\n\nlet apiQuotes = [];\n\nfunction ShowLoadingSpinner() {\n  loader.hidden = false;\n  quoteContainer.hidden = true;\n}\n//! hide loading\nfunction removeLoadingSpinner() {\n  if (!loader.hidden) {\n    quoteContainer.hidden = false;\n    loader.hidden = true;\n  }\n}\n\n//! show new quotes\nconst getNewQuotes = () => {\n  ShowLoadingSpinner();\n\n  //! pick  a random quote from apiQuotes array\n  const quote = apiQuotes[Math.floor(Math.random() * apiQuotes.length)];\n  //! check if author fieldis blank and replaceit with 'Unknown\n  if (!quote.author) {\n    authorText.textContent = \"Unknown\";\n  } else {\n    authorText.textContent = quote.author;\n  }\n\n  //! check quotes length to determine stylnig\n  if (quote.text.length > 50) {\n    quoteText.classList.add(\"long-quote\");\n  } else {\n    quoteText.classList.remove(\"long-quote\"); //! ta bort styling om text.length är mindre än 50\n  }\n  quoteText.textContent = quote.text;\n  //! set quotes hide loader\n  removeLoadingSpinner();\n};\n\n//! Get Quotes From API\n\n//**  vi får Json från apiet som response och jag omvandlar responsen till json objekt för att web servern ger bara en massor strängar */\n\nasync function getQuotesFromApi() {\n  ShowLoadingSpinner();\n  const apiUrl = \"https://jacintodesign.github.io/quotes-api/data/quotes.json\";\n  try {\n    const response = await fetch(apiUrl); //!await ger fetch tid att fetcha apien\n\n    apiQuotes = await response.json();\n\n    getNewQuotes(); //! function quotes generator\n  } catch (error) {\n    //! catch error here\n    console.log(\"oops no quotes\", error);\n  }\n}\n//! twitter quotes\nfunction twitterQuotes() {\n  const twitterurl = `https://twitter.com/intent/tweet?text=${quoteText.textContent} - ${authorText.textContent}`;\n  window.open(twitterurl, \"-blank\"); //! öppna en blnak sida\n}\n//! event listerens\nnewQuoteBtn.addEventListener(\"click\", getNewQuotes);\ntwitterBtn.addEventListener(\"click\", twitterQuotes);\n\n//! on load\ngetQuotesFromApi();\n"],"names":[],"version":3,"file":"index.aa69868b.js.map","sourceRoot":"/__parcel_source_root/"}